gcpProjectName: 'elife-data-pipeline'
importedTimestampFieldName: 'data_hub_imported_timestamp'
webApi:
  # Note: the first configuration is used by the end2end test

  # Observer API (used by end2end test)
  - dataPipelineId: observer_published_research_article
    description:
      Retrieve legacy POA and VOR publication dates from Observer.
    dataset: '{ENV}'
    table: test_published_research_article
    dataUrl:
      urlExcludingConfigurableParameters: https://observer.elifesciences.org/report/published-research-article-index?format=json

  # elifescience people API
  - dataPipelineId: people_api
    dataset: '{ENV}'
    table: test_people_api
    dataUrl:
      urlExcludingConfigurableParameters: https://api.elifesciences.org/people?
      configurableParameters:
        pageSizeParameterName: per-page
        defaultPageSize: 100
        pageParameterName: page
    response:
      itemsKeyFromResponseRoot:
        - items

  - dataPipelineId: web_s2_embeddings
    description:
      Retrieve embeddings from S2's model-apis via Title and Abstract.
      Those embeddings will then be imported into OpenSearch.
    dataset: '{ENV}'
    table: test_s2_specter_v1_embeddings
    source:
      include:
        bigQuery:
          projectName: 'elife-data-pipeline'
          sqlQuery:
            SELECT
              europepmc_response.doi AS paper_id,
              europepmc_response.title_with_markup AS title,
              europepmc_response.abstractText AS abstract,
            FROM `elife-data-pipeline.prod.v_latest_europepmc_preprint_servers_response` AS europepmc_response
            WHERE europepmc_response.doi IS NOT NULL
              AND COALESCE(europepmc_response.title_with_markup, '') <> ''
              AND COALESCE(europepmc_response.abstractText, '') <> ''
            ORDER BY europepmc_response.doi
            LIMIT 100
      exclude:
        bigQuery:
          ignoreNotFound: true
          projectName: 'elife-data-pipeline'
          sqlQuery:
            SELECT response.paper_id
            FROM `elife-data-pipeline.{ENV}.test_s2_specter_v1_embeddings` AS response
        keyFieldNameFromInclude: 'paper_id'
    requestBuilder:
      name: 's2_title_abstract_embeddings_api'
    dataUrl:
      urlExcludingConfigurableParameters: 'https://model-apis.semanticscholar.org/specter/v1/invoke'
    response:
      itemsKeyFromResponseRoot:
        - preds
    batchSize: 32
