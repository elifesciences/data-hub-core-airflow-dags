bigQueryToOpenSearch:
  - dataPipelineId: bigquery_to_opensearch_data_pipeline_s2_1
    source:
      bigQuery:
        projectName: 'elife-data-pipeline'
        sqlQuery: |-
          SELECT
              s2_response.externalIds.DOI AS doi,
              STRUCT(
                s2_response.provenance.imported_timestamp AS data_hub_imported_timestamp,
                s2_response.paperId AS paper_id,
                s2_response.title,
                s2_response.abstract,
                ARRAY(
                  SELECT AS STRUCT
                    author.name,
                    author.authorId AS s2_author_id
                  FROM UNNEST(s2_response.authors) AS author
                ) AS author_list,
                s2_response.embedding.vector AS specter_embedding_v1,
                s2_response.tldr
              ) AS s2
          FROM `elife-data-pipeline.prod.v_latest_semantic_scholar_response` AS s2_response
          -- for development: Select a few evaluated articles
          WHERE s2_response.externalIds.DOI IN (
            '10.1101/2020.07.24.219204', '10.1101/2023.03.30.534978', '10.1101/2022.08.24.504515'
          )
    fieldNamesFor:
      id: doi
      timestamp: data_hub_imported_timestamp
    state:
      initialState:
        startTimestamp: '2022-05-01+00:00'
      stateFile:
        bucketName: '{ENV}-elife-data-pipeline'
        objectName: 'airflow-config/bigquery-to-opensearch/{ENV}-state-s2.json'
    target:
      openSearch:
        hostname: 'opensearch'
        port: 9200
        timeout: 60
        # disable verification of certificates in development
        verifyCertificates: False
        secrets:
          parametersFromFile:
            - parameterName: username
              filePathEnvName: OPENSEARCH_USERNAME_FILE_PATH
            - parameterName: password
              filePathEnvName: OPENSEARCH_PASSWORD_FILE_PATH
        indexName: 'dev_preprints_v2'
        updateIndexSettings: False
        updateMappings: True
        operationMode: 'update'
        upsert: True
        indexSettings:
          # Note: These settings can usually only be applied to a new index.
          #   It is important to set for example the "knn_vector" fields ahead of time.
          #   Otherwise it may get initialised with a different type and can't be changed without re-indexing.
          settings:
            index:
              # Default values: https://opensearch.org/docs/latest/search-plugins/knn/knn-index/
              knn: True
              "knn.algo_param.ef_search": 512
          mappings:
            properties:
                doi:
                  type: "text"
                title:
                  type: "text"
                abstract:
                  type: "text"
                publication_date:
                  type: "date"
                s2:
                  properties:
                    author_list:
                      type: "nested"
                    specter_embedding_v1:
                      type: "knn_vector"
                      dimension: 768
                      method:
                        # Note: we need Lucene for filter support
                        name: "hnsw"
                        space_type: "l2"
                        engine: "lucene"
                        parameters:
                          # Default values: https://opensearch.org/docs/latest/search-plugins/knn/knn-index/
                          ef_construction: 512
                          m: 16
                europepmc:
                  properties:
                    author_list:
                      type: "nested"
                    version_list:
                      type: "nested"
                    full_text_list:
                      type: "nested"
    batchSize: 100
  - dataPipelineId: bigquery_to_opensearch_data_pipeline_europepmc_2
    source:
      bigQuery:
        projectName: 'elife-data-pipeline'
        sqlQuery: |-
          SELECT
              europepmc_response.doi AS doi,
              europepmc_response.firstPublicationDate AS publication_date,

              STRUCT(
                  europepmc_response.source AS source,
                  europepmc_response.provenance.imported_timestamp AS data_hub_imported_timestamp,
                  europepmc_response.id AS id,
                  europepmc_response.title_with_markup AS title_with_markup,
                  europepmc_response.abstractText AS abstract_with_markup,
                  europepmc_response.authorString AS author_string,
                  europepmc_response.firstIndexDate AS first_index_date,
                  europepmc_response.firstPublicationDate AS first_publication_date,
                  europepmc_response.dateOfRevision AS revision_date,
                  europepmc_response.language AS language,

                  ARRAY(
                      SELECT AS STRUCT
                          author.authorId AS author_id,
                          author.collectiveName AS collective_name,
                          author.firstName AS first_name,
                          author.fullName AS full_name,
                          author.initials,
                          author.lastName AS last_name,
                          ARRAY(
                              SELECT affiliation
                              FROM UNNEST(author.authorAffiliationDetailsList.authorAffiliation) AS affiliation
                          ) AS affiliation_string_list
                      FROM UNNEST(europepmc_response.authorList.author) AS author
                  ) AS authors,

                  ARRAY(
                      SELECT AS STRUCT
                          version.source,
                          version.id,
                          version.versionNumber AS version_number,
                          version.firstPublishDate AS first_publication_date,
                          ARRAY(
                              SELECT publication_type
                              FROM UNNEST(pubTypeList.pubType) AS publication_type
                          ) AS publication_type_list
                      FROM UNNEST(europepmc_response.versionList.version) AS version
                  ) AS version_list,

                  ARRAY(
                      SELECT AS STRUCT
                          full_text_info.availability,
                          full_text_info.availabilityCode AS availability_code,
                          full_text_info.documentStyle AS documentStyle,
                          full_text_info.site AS site,
                          full_text_info.url,
                      FROM UNNEST(europepmc_response.fullTextUrlList.fullTextUrl) AS full_text_info
                  ) AS full_text_list,

                  ARRAY(
                      SELECT keyword
                      FROM UNNEST(europepmc_response.keywordList.keyword) AS keyword
                  ) AS keyword_string_list
              ) AS europepmc

          FROM `elife-data-pipeline.prod.v_latest_europepmc_preprint_servers_response` AS europepmc_response
          WHERE europepmc_response.doi IN (
            '10.1101/2020.07.24.219204', '10.1101/2023.03.30.534978', '10.1101/2022.08.24.504515',
            '10.1101/2022.09.28.509871'
          )
    fieldNamesFor:
      id: doi
      timestamp: europepmc_data_hub_imported_timestamp
    state:
      initialState:
        startTimestamp: '2022-05-01+00:00'
      stateFile:
        bucketName: '{ENV}-elife-data-pipeline'
        objectName: 'airflow-config/bigquery-to-opensearch/{ENV}-state-europepmc.json'
    target:
      openSearch:
        hostname: 'opensearch'
        port: 9200
        timeout: 60
        # disable verification of certificates in development
        verifyCertificates: False
        secrets:
          parametersFromFile:
            - parameterName: username
              filePathEnvName: OPENSEARCH_USERNAME_FILE_PATH
            - parameterName: password
              filePathEnvName: OPENSEARCH_PASSWORD_FILE_PATH
        indexName: 'dev_preprints_v2'
        updateIndexSettings: False
        updateMappings: True
        operationMode: 'update'
        upsert: True
    batchSize: 100
  - dataPipelineId: bigquery_to_opensearch_data_pipeline_sciety_3
    source:
      bigQuery:
        projectName: 'elife-data-pipeline'
        sqlQuery: |-
          SELECT
            event.article_doi AS doi,
            STRUCT(
              MAX(event_timestamp) AS last_event_timestamp,
              COUNT(DISTINCT event.evaluation_locator) AS evaluation_count
            ) AS sciety
          FROM `elife-data-pipeline.prod.v_sciety_event` AS event
          WHERE event.normalized_event_name IN ('EvaluationRecorded', 'EvaluationPublicationRecorded')
            AND NOT event.is_deleted
            AND event.article_doi IN (
              '10.1101/2020.07.24.219204', '10.1101/2023.03.30.534978', '10.1101/2022.08.24.504515',
              '10.1101/2022.09.28.509871'
            )
          GROUP BY event.article_doi
    fieldNamesFor:
      id: doi
      timestamp: last_event_timestamp
    state:
      initialState:
        startTimestamp: '2019-01-01+00:00'
      stateFile:
        bucketName: '{ENV}-elife-data-pipeline'
        objectName: 'airflow-config/bigquery-to-opensearch/{ENV}-state-sciety.json'
    target:
      openSearch:
        hostname: 'opensearch'
        port: 9200
        timeout: 60
        # disable verification of certificates in development
        verifyCertificates: False
        secrets:
          parametersFromFile:
            - parameterName: username
              filePathEnvName: OPENSEARCH_USERNAME_FILE_PATH
            - parameterName: password
              filePathEnvName: OPENSEARCH_PASSWORD_FILE_PATH
        indexName: 'dev_preprints_v2'
        updateIndexSettings: False
        updateMappings: True
        operationMode: 'update'
        upsert: True
    batchSize: 100
